<?php
/**
 * AllApiTest
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Velocloud API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 0.9.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.3.1
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Please update the test case below to test the endpoint.
 */

namespace Swagger\Client;

use \Swagger\Client\Configuration;
use \Swagger\Client\ApiException;
use \Swagger\Client\ObjectSerializer;

/**
 * AllApiTest Class Doc Comment
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class AllApiTest extends \PHPUnit_Framework_TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass()
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {
    }

    /**
     * Test case for configurationCloneConfiguration
     *
     * Clone a configuration.
     *
     */
    public function testConfigurationCloneConfiguration()
    {
    }

    /**
     * Test case for configurationCloneEnterpriseTemplate
     *
     * clone a new configuration.
     *
     */
    public function testConfigurationCloneEnterpriseTemplate()
    {
    }

    /**
     * Test case for configurationGetConfiguration
     *
     * Get a configuration profile.
     *
     */
    public function testConfigurationGetConfiguration()
    {
    }

    /**
     * Test case for configurationGetConfigurationModules
     *
     * .
     *
     */
    public function testConfigurationGetConfigurationModules()
    {
    }

    /**
     * Test case for configurationInsertConfigurationModule
     *
     * .
     *
     */
    public function testConfigurationInsertConfigurationModule()
    {
    }

    /**
     * Test case for configurationUpdateConfiguration
     *
     * .
     *
     */
    public function testConfigurationUpdateConfiguration()
    {
    }

    /**
     * Test case for configurationUpdateConfigurationModule
     *
     * .
     *
     */
    public function testConfigurationUpdateConfigurationModule()
    {
    }

    /**
     * Test case for disasterRecoveryConfigureActiveForReplication
     *
     * Configure current VCO to be active and specified VCO to be standby for VCO disaster recovery replication.
     *
     */
    public function testDisasterRecoveryConfigureActiveForReplication()
    {
    }

    /**
     * Test case for disasterRecoveryDemoteActive
     *
     * Demote current server from active to zombie.
     *
     */
    public function testDisasterRecoveryDemoteActive()
    {
    }

    /**
     * Test case for disasterRecoveryGetReplicationBlob
     *
     * [Unused by default] Get from the active VCO the blob needed to configure VCO replication on the standby..
     *
     */
    public function testDisasterRecoveryGetReplicationBlob()
    {
    }

    /**
     * Test case for disasterRecoveryGetReplicationStatus
     *
     * Get VCO disaster recovery status.
     *
     */
    public function testDisasterRecoveryGetReplicationStatus()
    {
    }

    /**
     * Test case for disasterRecoveryPrepareForStandby
     *
     * Prepare current VCO to be configured as a standby system.
     *
     */
    public function testDisasterRecoveryPrepareForStandby()
    {
    }

    /**
     * Test case for disasterRecoveryPromoteStandbyToActive
     *
     * Promote the current server, expected to be a standby, to take over as the single standalone VCO.
     *
     */
    public function testDisasterRecoveryPromoteStandbyToActive()
    {
    }

    /**
     * Test case for disasterRecoveryRemoveStandby
     *
     * Unconfigure VCO disaster recovery on the current server.
     *
     */
    public function testDisasterRecoveryRemoveStandby()
    {
    }

    /**
     * Test case for disasterRecoveryTransitionToStandby
     *
     * Configure current VCO to transition to standby in disaster recovery active/standby pair..
     *
     */
    public function testDisasterRecoveryTransitionToStandby()
    {
    }

    /**
     * Test case for edgeDeleteEdge
     *
     * .
     *
     */
    public function testEdgeDeleteEdge()
    {
    }

    /**
     * Test case for edgeDeleteEdgeRecords
     *
     * Deletes Edge record(s).
     *
     */
    public function testEdgeDeleteEdgeRecords()
    {
    }

    /**
     * Test case for edgeEdgeCancelReactivation
     *
     * Cancel reactivation.
     *
     */
    public function testEdgeEdgeCancelReactivation()
    {
    }

    /**
     * Test case for edgeEdgeProvision
     *
     * Provision an edge.
     *
     */
    public function testEdgeEdgeProvision()
    {
    }

    /**
     * Test case for edgeEdgeRequestReactivation
     *
     * reactivate edge.
     *
     */
    public function testEdgeEdgeRequestReactivation()
    {
    }

    /**
     * Test case for edgeGetEdge
     *
     * Get edge info.
     *
     */
    public function testEdgeGetEdge()
    {
    }

    /**
     * Test case for edgeGetEdgeConfigurationStack
     *
     * .
     *
     */
    public function testEdgeGetEdgeConfigurationStack()
    {
    }

    /**
     * Test case for edgeSetEdgeHandOffGateways
     *
     * .
     *
     */
    public function testEdgeSetEdgeHandOffGateways()
    {
    }

    /**
     * Test case for edgeUpdateEdgeAdminPassword
     *
     * update credentials.
     *
     */
    public function testEdgeUpdateEdgeAdminPassword()
    {
    }

    /**
     * Test case for edgeUpdateEdgeAttributes
     *
     * Update edge attributes (name and description)..
     *
     */
    public function testEdgeUpdateEdgeAttributes()
    {
    }

    /**
     * Test case for enterpriseDeleteEnterprise
     *
     * Deletes enterprise.
     *
     */
    public function testEnterpriseDeleteEnterprise()
    {
    }

    /**
     * Test case for enterpriseDeleteEnterpriseGatewayRecords
     *
     * Deletes enterprise gateway record(s).
     *
     */
    public function testEnterpriseDeleteEnterpriseGatewayRecords()
    {
    }

    /**
     * Test case for enterpriseGetEnterpiseRouteConfiguration
     *
     * Get route advertisement and routing preferences policy.
     *
     */
    public function testEnterpriseGetEnterpiseRouteConfiguration()
    {
    }

    /**
     * Test case for enterpriseGetEnterpriseConfigurations
     *
     * get enterprise configuration profiles.
     *
     */
    public function testEnterpriseGetEnterpriseConfigurations()
    {
    }

    /**
     * Test case for enterpriseGetEnterpriseEdges
     *
     * Get edge list..
     *
     */
    public function testEnterpriseGetEnterpriseEdges()
    {
    }

    /**
     * Test case for enterpriseGetEnterpriseRouteTable
     *
     * .
     *
     */
    public function testEnterpriseGetEnterpriseRouteTable()
    {
    }

    /**
     * Test case for enterpriseGetEnterpriseServices
     *
     * .
     *
     */
    public function testEnterpriseGetEnterpriseServices()
    {
    }

    /**
     * Test case for enterpriseGetEnterpriseUsers
     *
     * Get list of enterprise users by enterprise id..
     *
     */
    public function testEnterpriseGetEnterpriseUsers()
    {
    }

    /**
     * Test case for enterpriseInsertEnterprise
     *
     * Insert an enterprise, owned by the operator or an MSP..
     *
     */
    public function testEnterpriseInsertEnterprise()
    {
    }

    /**
     * Test case for enterpriseInsertEnterpriseNetworkAllocation
     *
     * insert enterprise network allocation.
     *
     */
    public function testEnterpriseInsertEnterpriseNetworkAllocation()
    {
    }

    /**
     * Test case for enterpriseInsertEnterpriseService
     *
     * Insert an enterprise service.
     *
     */
    public function testEnterpriseInsertEnterpriseService()
    {
    }

    /**
     * Test case for enterpriseInsertEnterpriseUser
     *
     * Insert an enterprise user.
     *
     */
    public function testEnterpriseInsertEnterpriseUser()
    {
    }

    /**
     * Test case for enterpriseInsertOrUpdateEnterpriseCapability
     *
     * .
     *
     */
    public function testEnterpriseInsertOrUpdateEnterpriseCapability()
    {
    }

    /**
     * Test case for enterpriseInsertOrUpdateEnterpriseGatewayHandoff
     *
     * .
     *
     */
    public function testEnterpriseInsertOrUpdateEnterpriseGatewayHandoff()
    {
    }

    /**
     * Test case for enterpriseUpdateEnterpriseNetworkAllocation
     *
     * .
     *
     */
    public function testEnterpriseUpdateEnterpriseNetworkAllocation()
    {
    }

    /**
     * Test case for enterpriseUpdateEnterpriseRoute
     *
     * .
     *
     */
    public function testEnterpriseUpdateEnterpriseRoute()
    {
    }

    /**
     * Test case for enterpriseUpdateEnterpriseRouteConfiguration
     *
     * .
     *
     */
    public function testEnterpriseUpdateEnterpriseRouteConfiguration()
    {
    }

    /**
     * Test case for enterpriseUpdateEnterpriseSecurityPolicy
     *
     * .
     *
     */
    public function testEnterpriseUpdateEnterpriseSecurityPolicy()
    {
    }

    /**
     * Test case for enterpriseUpdateEnterpriseService
     *
     * .
     *
     */
    public function testEnterpriseUpdateEnterpriseService()
    {
    }

    /**
     * Test case for enterpriseUserDeleteEnterpriseUser
     *
     * Delete an enterprise user..
     *
     */
    public function testEnterpriseUserDeleteEnterpriseUser()
    {
    }

    /**
     * Test case for enterpriseUserUpdateEnterpriseUser
     *
     * Update an enterprise user.
     *
     */
    public function testEnterpriseUserUpdateEnterpriseUser()
    {
    }

    /**
     * Test case for eventGetEnterpriseEvents
     *
     * Fetch edge events.
     *
     */
    public function testEventGetEnterpriseEvents()
    {
    }

    /**
     * Test case for eventGetOperatorEvents
     *
     * Fetch Operator Events.
     *
     */
    public function testEventGetOperatorEvents()
    {
    }

    /**
     * Test case for gatewayDeleteGateway
     *
     * .
     *
     */
    public function testGatewayDeleteGateway()
    {
    }

    /**
     * Test case for gatewayGatewayProvision
     *
     * Provision a gateway.
     *
     */
    public function testGatewayGatewayProvision()
    {
    }

    /**
     * Test case for gatewayUpdateGatewayAttributes
     *
     * .
     *
     */
    public function testGatewayUpdateGatewayAttributes()
    {
    }

    /**
     * Test case for loginEnterpriseLogin
     *
     * Authentication for non-operator users.
     *
     */
    public function testLoginEnterpriseLogin()
    {
    }

    /**
     * Test case for loginOperatorLogin
     *
     * Authentication for an operator user.
     *
     */
    public function testLoginOperatorLogin()
    {
    }

    /**
     * Test case for logout
     *
     * Deactivates a given authorization cookie.
     *
     */
    public function testLogout()
    {
    }

    /**
     * Test case for meta
     *
     * Get meta-data on any other API call.
     *
     */
    public function testMeta()
    {
    }

    /**
     * Test case for metricsGetAggregateEdgeLinkMetrics
     *
     * get aggregated edge link metrics across enterprises.
     *
     */
    public function testMetricsGetAggregateEdgeLinkMetrics()
    {
    }

    /**
     * Test case for metricsGetEdgeAppLinkMetrics
     *
     * Fetch an array of flow metric grouped by link..
     *
     */
    public function testMetricsGetEdgeAppLinkMetrics()
    {
    }

    /**
     * Test case for metricsGetEdgeAppMetrics
     *
     * Fetch an array of application flow metrics..
     *
     */
    public function testMetricsGetEdgeAppMetrics()
    {
    }

    /**
     * Test case for metricsGetEdgeLinkMetrics
     *
     * get edge link metrics.
     *
     */
    public function testMetricsGetEdgeLinkMetrics()
    {
    }

    /**
     * Test case for monitoringGetAggregateEnterpriseEvents
     *
     * Fetch all ent. events.
     *
     */
    public function testMonitoringGetAggregateEnterpriseEvents()
    {
    }

    /**
     * Test case for monitoringGetAggregates
     *
     * Generate aggregate enterprise/edge information.
     *
     */
    public function testMonitoringGetAggregates()
    {
    }

    /**
     * Test case for monitoringGetEdgeBgpPeerStatus
     *
     * get BGP adjacency status for an edge.
     *
     */
    public function testMonitoringGetEdgeBgpPeerStatus()
    {
    }

    /**
     * Test case for monitoringGetEnterpriseBgpPeerStatus
     *
     * get enterprise BGP adjacency status.
     *
     */
    public function testMonitoringGetEnterpriseBgpPeerStatus()
    {
    }

    /**
     * Test case for monitoringGetEnterpriseEdgeLinkStatus
     *
     * edge and link status for monitoring.
     *
     */
    public function testMonitoringGetEnterpriseEdgeLinkStatus()
    {
    }

    /**
     * Test case for networkDeleteNetworkGatewayPool
     *
     * .
     *
     */
    public function testNetworkDeleteNetworkGatewayPool()
    {
    }

    /**
     * Test case for networkGetNetworkConfigurations
     *
     * Get configuration profiles.
     *
     */
    public function testNetworkGetNetworkConfigurations()
    {
    }

    /**
     * Test case for networkGetNetworkEnterprises
     *
     * Get list of enterprises by network..
     *
     */
    public function testNetworkGetNetworkEnterprises()
    {
    }

    /**
     * Test case for networkGetNetworkGatewayPools
     *
     * Get list of gateway pools.
     *
     */
    public function testNetworkGetNetworkGatewayPools()
    {
    }

    /**
     * Test case for networkGetNetworkGateways
     *
     * .
     *
     */
    public function testNetworkGetNetworkGateways()
    {
    }

    /**
     * Test case for networkGetNetworkOperatorUsers
     *
     * Get list of operator users associated with a network.
     *
     */
    public function testNetworkGetNetworkOperatorUsers()
    {
    }

    /**
     * Test case for networkInsertNetworkGatewayPool
     *
     * Insert gateway pool.
     *
     */
    public function testNetworkInsertNetworkGatewayPool()
    {
    }

    /**
     * Test case for networkUpdateNetworkGatewayPoolAttributes
     *
     * .
     *
     */
    public function testNetworkUpdateNetworkGatewayPoolAttributes()
    {
    }

    /**
     * Test case for operatorUserDeleteOperatorUser
     *
     * Delete an operator user.
     *
     */
    public function testOperatorUserDeleteOperatorUser()
    {
    }

    /**
     * Test case for operatorUserInsertOperatorUser
     *
     * Insert an operator user.
     *
     */
    public function testOperatorUserInsertOperatorUser()
    {
    }

    /**
     * Test case for operatorUserUpdateOperatorUser
     *
     * Update an operator user.
     *
     */
    public function testOperatorUserUpdateOperatorUser()
    {
    }

    /**
     * Test case for roleCreateRoleCustomization
     *
     * Create a role customization..
     *
     */
    public function testRoleCreateRoleCustomization()
    {
    }

    /**
     * Test case for roleDeleteRoleCustomization
     *
     * Delete a role customization..
     *
     */
    public function testRoleDeleteRoleCustomization()
    {
    }

    /**
     * Test case for roleGetUserTypeRoles
     *
     * Return the roles for user type.
     *
     */
    public function testRoleGetUserTypeRoles()
    {
    }

    /**
     * Test case for systemPropertyGetSystemProperty
     *
     * Get system property.
     *
     */
    public function testSystemPropertyGetSystemProperty()
    {
    }

    /**
     * Test case for systemPropertyInsertOrUpdateSystemProperty
     *
     * Insert or Update a system property.
     *
     */
    public function testSystemPropertyInsertOrUpdateSystemProperty()
    {
    }

    /**
     * Test case for systemPropertyInsertSystemProperty
     *
     * Insert a system property.
     *
     */
    public function testSystemPropertyInsertSystemProperty()
    {
    }

    /**
     * Test case for systemPropertyUpdateSystemProperty
     *
     * Update a system property.
     *
     */
    public function testSystemPropertyUpdateSystemProperty()
    {
    }
}
